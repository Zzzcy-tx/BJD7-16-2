C251 COMPILER V5.60.0,  eeprom                                                             15/07/23  21:04:31  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE eeprom
OBJECT MODULE PLACED IN .\Out_File\eeprom.obj
COMPILER INVOKED BY: D:\keil5\C251\BIN\C251.EXE ..\CODE\eeprom.c LARGE INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE IN
                    -CDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\in
                    -c;..\USER\src) DEBUG PRINT(.\Out_File\eeprom.lst) OBJECT(.\Out_File\eeprom.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "math.h"
    3          
    4          float StrToDouble(const char *s)
    5          {
    6   1              
    7   1              int i = 0;
    8   1              int k = 0;
    9   1              float j;
   10   1              int flag =1;
   11   1              float result = 0.0;
   12   1              if (s[i] == '+')
   13   1              {
   14   2                      i++;
   15   2              }
   16   1              if (s[i] == '-')
   17   1              {
   18   2                      i++;
   19   2                      flag = -1;
   20   2              }
   21   1              while (s[i] != '\0' && s[i] != '.')
   22   1              {
   23   2                      j = (s[i] - '0')*1.0;
   24   2                      result = result * 10 + j;
   25   2                      i++;
   26   2              }
   27   1              if (s[i] == '.')
   28   1              {
   29   2                      i++;
   30   2                      while (s[i] != '\0'&&s[i] != ' ')
   31   2                      {
   32   3                              k++;
   33   3                              j = s[i] - '0';
   34   3                              result = result + (1.0 * j) / pow(10.0, k);   
   35   3                              i++;
   36   3                      }
   37   2              }
   38   1              result = flag * result;
   39   1              return result;
   40   1      }
   41          
   42          void extern_iap_write_float(double dat,uint8 num,uint8 pointnum,uint16 addr)
   43          {
   44   1              uint8   length;
   45   1              int8    buff[34];
   46   1              int8    start,end,point;
   47   1      
   48   1              if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
   49   1              else
   50   1              {
   51   2                      length = zf_sprintf( &buff[1],"%f",dat);
   52   2                      length++;
   53   2              }
   54   1              point = length - 7;         //计算小数点位置
   55   1              start = point - num - 1;    //计算起始位
   56   1              end = point + pointnum + 1; //计算结束位
   57   1              while(0>start)//整数位不够  末尾应该填充空格
C251 COMPILER V5.60.0,  eeprom                                                             15/07/23  21:04:31  PAGE 2   

   58   1              {
   59   2                      buff[end] = ' ';
   60   2                      end++;
   61   2                      start++;
   62   2              }
   63   1          
   64   1              if(0>dat)   buff[start] = '-';
   65   1        else        buff[start] = '+';
   66   1          
   67   1              buff[end] = '\0';
   68   1      
   69   1              extern_iap_write_bytes(addr,(uint8 *)buff,num+pointnum+3);
   70   1      }
   71          
   72          float iap_read_float(uint8 len, uint16 addr)
   73          {
   74   1              uint8 buf[34];
   75   1              iap_read_bytes(addr, buf, len);
   76   1              
   77   1              return StrToDouble(buf);
   78   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1031     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       101     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         3     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
