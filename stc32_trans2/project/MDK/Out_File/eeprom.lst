C251 COMPILER V5.60.0,  eeprom                                                             17/07/23  20:03:18  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE eeprom
OBJECT MODULE PLACED IN .\Out_File\eeprom.obj
COMPILER INVOKED BY: D:\Program files\Keil251\C251\BIN\C251.EXE ..\CODE\eeprom.c LARGE INTR2 WARNINGLEVEL(3) OPTIMIZE(0,
                    -SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..
                    -\CODE;..\USER\inc;..\USER\src) DEBUG PRINT(.\Out_File\eeprom.lst) TABS(2) OBJECT(.\Out_File\eeprom.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "math.h"
    3          #include "stdlib.h"
    4          
    5          float StrToDouble(const char *s)
    6          {
    7   1        
    8   1        int i = 0;
    9   1        int k = 0;
   10   1        float j;
   11   1        int flag =1;
   12   1        float result = 0.0;
   13   1        if (s[i] == '+')
   14   1        {
   15   2          i++;
   16   2        }
   17   1        if (s[i] == '-')
   18   1        {
   19   2          i++;
   20   2          flag = -1;
   21   2        }
   22   1        while (s[i] != '\0' && s[i] != '.')
   23   1        {
   24   2          j = (s[i] - '0')*1.0;
   25   2          result = result * 10 + j;
   26   2          i++;
   27   2        }
   28   1        if (s[i] == '.')
   29   1        {
   30   2          i++;
   31   2          while (s[i] != '\0'&&s[i] != ' ')
   32   2          {
   33   3            k++;
   34   3            j = s[i] - '0';
   35   3            result = result + (1.0 * j) / pow(10.0, k);   
   36   3            i++;
   37   3          }
   38   2        }
   39   1        result = flag * result;
   40   1        return result;
   41   1      }
   42          
   43          void extern_iap_write_float(double dat,uint8 num,uint8 pointnum,uint16 addr)
   44          {
   45   1          uint8   length;
   46   1        int8    buff[34];
   47   1        int8    start,end,point;
   48   1      
   49   1        if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
   50   1        else
   51   1        {
   52   2          length = zf_sprintf( &buff[1],"%f",dat);
   53   2          length++;
   54   2        }
   55   1        point = length - 7;         //计算小数点位置
   56   1        start = point - num - 1;    //计算起始位
   57   1        end = point + pointnum + 1; //计算结束位
C251 COMPILER V5.60.0,  eeprom                                                             17/07/23  20:03:18  PAGE 2   

   58   1        while(0>start)//整数位不够  末尾应该填充空格
   59   1        {
   60   2          buff[end] = ' ';
   61   2          end++;
   62   2          start++;
   63   2        }
   64   1          
   65   1        if(0>dat)   buff[start] = '-';
   66   1        else        buff[start] = '+';
   67   1          
   68   1        buff[end] = '\0';
   69   1      
   70   1        extern_iap_write_bytes(addr,(uint8 *)buff,num+pointnum+3);
   71   1      }
   72          
   73          float iap_read_float(uint8 len, uint16 addr)
   74          {
   75   1        uint8 buf[34];
   76   1        iap_read_bytes(addr, buf, len);
   77   1        
   78   1        return StrToDouble(buf);
   79   1      }
   80          
   81          int16 iap_read_int16(uint8 len, uint16 addr)
   82          {
   83   1        uint8 buf[34];
   84   1        iap_read_bytes(addr, buf, len);
   85   1        
   86   1        return atoi(buf);
   87   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1084     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       138     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         3     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
